/*
 * generated by Xtext 2.9.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getVocSpecVocSpecParserRuleCall_0_0());
				}
				lv_vocSpec_0_0=ruleVocSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"vocSpec",
						lv_vocSpec_0_0,
						"org.xtext.example.mydsl.MyDsl.VocSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getInteractionSpecInteractionSpecParserRuleCall_1_0());
				}
				lv_interactionSpec_1_0=ruleInteractionSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"interactionSpec",
						lv_interactionSpec_1_0,
						"org.xtext.example.mydsl.MyDsl.InteractionSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getArchSpecArchSpecParserRuleCall_2_0());
				}
				lv_archSpec_2_0=ruleArchSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"archSpec",
						lv_archSpec_2_0,
						"org.xtext.example.mydsl.MyDsl.ArchSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getNetworkSpecDeploymentSpecParserRuleCall_3_0());
				}
				lv_networkSpec_3_0=ruleDeploymentSpec
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"networkSpec",
						lv_networkSpec_3_0,
						"org.xtext.example.mydsl.MyDsl.DeploymentSpec");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDeploymentSpec
entryRuleDeploymentSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeploymentSpecRule()); }
	iv_ruleDeploymentSpec=ruleDeploymentSpec
	{ $current=$iv_ruleDeploymentSpec.current; }
	EOF;

// Rule DeploymentSpec
ruleDeploymentSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='devices:'
		{
			newLeafNode(otherlv_0, grammarAccess.getDeploymentSpecAccess().getDevicesKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeploymentSpecAccess().getDevicesDeviceParserRuleCall_1_0());
				}
				lv_devices_1_0=ruleDevice
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeploymentSpecRule());
					}
					add(
						$current,
						"devices",
						lv_devices_1_0,
						"org.xtext.example.mydsl.MyDsl.Device");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDevice
entryRuleDevice returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceRule()); }
	iv_ruleDevice=ruleDevice
	{ $current=$iv_ruleDevice.current; }
	EOF;

// Rule Device
ruleDevice returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getDeviceNameDeviceEntityNameParserRuleCall_0_0());
				}
				lv_deviceName_0_0=ruleDeviceEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					set(
						$current,
						"deviceName",
						lv_deviceName_0_0,
						"org.xtext.example.mydsl.MyDsl.DeviceEntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeviceAccess().getColonKeyword_1());
		}
		otherlv_2='location:'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeviceAccess().getLocationKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getDeviceLocationDeviceLocationParserRuleCall_3_0());
				}
				lv_deviceLocation_3_0=ruleDeviceLocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					add(
						$current,
						"deviceLocation",
						lv_deviceLocation_3_0,
						"org.xtext.example.mydsl.MyDsl.DeviceLocation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getDeviceAccess().getSemicolonKeyword_4());
		}
		otherlv_5='platform:'
		{
			newLeafNode(otherlv_5, grammarAccess.getDeviceAccess().getPlatformKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getPlatformTypePlatformTypeParserRuleCall_6_0());
				}
				lv_platformType_6_0=rulePlatformType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					add(
						$current,
						"platformType",
						lv_platformType_6_0,
						"org.xtext.example.mydsl.MyDsl.PlatformType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getDeviceAccess().getSemicolonKeyword_7());
		}
		otherlv_8='resources:'
		{
			newLeafNode(otherlv_8, grammarAccess.getDeviceAccess().getResourcesKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getDeviceAbilitiesDeviceAbilitiesParserRuleCall_9_0());
				}
				lv_deviceAbilities_9_0=ruleDeviceAbilities
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					add(
						$current,
						"deviceAbilities",
						lv_deviceAbilities_9_0,
						"org.xtext.example.mydsl.MyDsl.DeviceAbilities");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_10=';'
		{
			newLeafNode(otherlv_10, grammarAccess.getDeviceAccess().getSemicolonKeyword_10());
		}
		otherlv_11='protocol:'
		{
			newLeafNode(otherlv_11, grammarAccess.getDeviceAccess().getProtocolKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeviceAccess().getDeviceProtocolDeviceProtocolParserRuleCall_12_0());
				}
				lv_deviceProtocol_12_0=ruleDeviceProtocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeviceRule());
					}
					add(
						$current,
						"deviceProtocol",
						lv_deviceProtocol_12_0,
						"org.xtext.example.mydsl.MyDsl.DeviceProtocol");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=';'
		{
			newLeafNode(otherlv_13, grammarAccess.getDeviceAccess().getSemicolonKeyword_13());
		}
		(
			otherlv_14='database:'
			{
				newLeafNode(otherlv_14, grammarAccess.getDeviceAccess().getDatabaseKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeviceAccess().getDatabaseNameDatabaseNameParserRuleCall_14_1_0());
					}
					lv_databaseName_15_0=ruleDatabaseName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeviceRule());
						}
						add(
							$current,
							"databaseName",
							lv_databaseName_15_0,
							"org.xtext.example.mydsl.MyDsl.DatabaseName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16=';'
			{
				newLeafNode(otherlv_16, grammarAccess.getDeviceAccess().getSemicolonKeyword_14_2());
			}
		)*
	)
;

// Entry rule entryRuleDeviceLocation
entryRuleDeviceLocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceLocationRule()); }
	iv_ruleDeviceLocation=ruleDeviceLocation
	{ $current=$iv_ruleDeviceLocation.current; }
	EOF;

// Rule DeviceLocation
ruleDeviceLocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_regionLabel_0_0=RULE_ID
				{
					newLeafNode(lv_regionLabel_0_0, grammarAccess.getDeviceLocationAccess().getRegionLabelIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceLocationRule());
					}
					setWithLastConsumed(
						$current,
						"regionLabel",
						lv_regionLabel_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeviceLocationAccess().getColonKeyword_1());
		}
		(
			(
				lv_regionValue_2_0=RULE_INT
				{
					newLeafNode(lv_regionValue_2_0, grammarAccess.getDeviceLocationAccess().getRegionValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceLocationRule());
					}
					setWithLastConsumed(
						$current,
						"regionValue",
						lv_regionValue_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRulePlatformType
entryRulePlatformType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlatformTypeRule()); }
	iv_rulePlatformType=rulePlatformType
	{ $current=$iv_rulePlatformType.current; }
	EOF;

// Rule PlatformType
rulePlatformType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_deviceType_0_0='JavaSE'
				{
					newLeafNode(lv_deviceType_0_0, grammarAccess.getPlatformTypeAccess().getDeviceTypeJavaSEKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlatformTypeRule());
					}
					setWithLastConsumed($current, "deviceType", lv_deviceType_0_0, "JavaSE");
				}
			)
		)
		    |
		(
			(
				lv_deviceType_1_0='Android'
				{
					newLeafNode(lv_deviceType_1_0, grammarAccess.getPlatformTypeAccess().getDeviceTypeAndroidKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlatformTypeRule());
					}
					setWithLastConsumed($current, "deviceType", lv_deviceType_1_0, "Android");
				}
			)
		)
		    |
		(
			(
				lv_deviceType_2_0='NodeJS'
				{
					newLeafNode(lv_deviceType_2_0, grammarAccess.getPlatformTypeAccess().getDeviceTypeNodeJSKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlatformTypeRule());
					}
					setWithLastConsumed($current, "deviceType", lv_deviceType_2_0, "NodeJS");
				}
			)
		)
	)
;

// Entry rule entryRuleDatabaseName
entryRuleDatabaseName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDatabaseNameRule()); }
	iv_ruleDatabaseName=ruleDatabaseName
	{ $current=$iv_ruleDatabaseName.current; }
	EOF;

// Rule DatabaseName
ruleDatabaseName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_installedDatabase_0_0='MySQL'
				{
					newLeafNode(lv_installedDatabase_0_0, grammarAccess.getDatabaseNameAccess().getInstalledDatabaseMySQLKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseNameRule());
					}
					setWithLastConsumed($current, "installedDatabase", lv_installedDatabase_0_0, "MySQL");
				}
			)
		)
		    |
		(
			(
				lv_installedDatabase_1_0='SQLAzure'
				{
					newLeafNode(lv_installedDatabase_1_0, grammarAccess.getDatabaseNameAccess().getInstalledDatabaseSQLAzureKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseNameRule());
					}
					setWithLastConsumed($current, "installedDatabase", lv_installedDatabase_1_0, "SQLAzure");
				}
			)
		)
		    |
		(
			(
				lv_installedDatabase_2_0='MongoDB'
				{
					newLeafNode(lv_installedDatabase_2_0, grammarAccess.getDatabaseNameAccess().getInstalledDatabaseMongoDBKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDatabaseNameRule());
					}
					setWithLastConsumed($current, "installedDatabase", lv_installedDatabase_2_0, "MongoDB");
				}
			)
		)
	)
;

// Entry rule entryRuleDeviceProtocol
entryRuleDeviceProtocol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceProtocolRule()); }
	iv_ruleDeviceProtocol=ruleDeviceProtocol
	{ $current=$iv_ruleDeviceProtocol.current; }
	EOF;

// Rule DeviceProtocol
ruleDeviceProtocol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_protocolName_0_0='mqtt'
			{
				newLeafNode(lv_protocolName_0_0, grammarAccess.getDeviceProtocolAccess().getProtocolNameMqttKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDeviceProtocolRule());
				}
				setWithLastConsumed($current, "protocolName", lv_protocolName_0_0, "mqtt");
			}
		)
	)
;

// Entry rule entryRuleDeviceAbilities
entryRuleDeviceAbilities returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceAbilitiesRule()); }
	iv_ruleDeviceAbilities=ruleDeviceAbilities
	{ $current=$iv_ruleDeviceAbilities.current; }
	EOF;

// Rule DeviceAbilities
ruleDeviceAbilities returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeviceAbilitiesRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getDeviceAbilitiesAccess().getDeviceEntityNameEntityNameCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getDeviceAbilitiesAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeviceAbilitiesAccess().getNameDeviceAbilitiesParserRuleCall_1_1_0());
					}
					lv_name_2_0=ruleDeviceAbilities
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeviceAbilitiesRule());
						}
						set(
							$current,
							"name",
							lv_name_2_0,
							"org.xtext.example.mydsl.MyDsl.DeviceAbilities");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleInteractionSpec
entryRuleInteractionSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInteractionSpecRule()); }
	iv_ruleInteractionSpec=ruleInteractionSpec
	{ $current=$iv_ruleInteractionSpec.current; }
	EOF;

// Rule InteractionSpec
ruleInteractionSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='structs:'
			{
				newLeafNode(otherlv_0, grammarAccess.getInteractionSpecAccess().getStructsKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInteractionSpecAccess().getStructsStructParserRuleCall_0_1_0());
					}
					lv_structs_1_0=ruleStruct
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInteractionSpecRule());
						}
						add(
							$current,
							"structs",
							lv_structs_1_0,
							"org.xtext.example.mydsl.MyDsl.Struct");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
		(
			otherlv_2='resources:'
			{
				newLeafNode(otherlv_2, grammarAccess.getInteractionSpecAccess().getResourcesKeyword_1());
			}
		)*
		(
			otherlv_3='userInteractions:'
			{
				newLeafNode(otherlv_3, grammarAccess.getInteractionSpecAccess().getUserInteractionsKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInteractionSpecAccess().getInteractionNameInteractionNameParserRuleCall_2_1_0());
					}
					lv_interactionName_4_0=ruleInteractionName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInteractionSpecRule());
						}
						add(
							$current,
							"interactionName",
							lv_interactionName_4_0,
							"org.xtext.example.mydsl.MyDsl.InteractionName");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
	)
;

// Entry rule entryRuleInteractionName
entryRuleInteractionName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInteractionNameRule()); }
	iv_ruleInteractionName=ruleInteractionName
	{ $current=$iv_ruleInteractionName.current; }
	EOF;

// Rule InteractionName
ruleInteractionName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInteractionNameAccess().getInteractionNameEntityNameParserRuleCall_0_0());
				}
				lv_interactionName_0_0=ruleEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteractionNameRule());
					}
					set(
						$current,
						"interactionName",
						lv_interactionName_0_0,
						"org.xtext.example.mydsl.MyDsl.EntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInteractionNameAccess().getInteractionCommandCommandParserRuleCall_1_0());
				}
				lv_interactionCommand_1_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteractionNameRule());
					}
					add(
						$current,
						"interactionCommand",
						lv_interactionCommand_1_0,
						"org.xtext.example.mydsl.MyDsl.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInteractionNameAccess().getInteractionRequestRequestParserRuleCall_2_0());
				}
				lv_interactionRequest_2_0=ruleRequest
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteractionNameRule());
					}
					add(
						$current,
						"interactionRequest",
						lv_interactionRequest_2_0,
						"org.xtext.example.mydsl.MyDsl.Request");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getInteractionNameAccess().getInteractionNotifyInteractionActionParserRuleCall_3_0());
				}
				lv_interactionNotify_3_0=ruleInteractionAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteractionNameRule());
					}
					add(
						$current,
						"interactionNotify",
						lv_interactionNotify_3_0,
						"org.xtext.example.mydsl.MyDsl.InteractionAction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleInteractionAction
entryRuleInteractionAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInteractionActionRule()); }
	iv_ruleInteractionAction=ruleInteractionAction
	{ $current=$iv_ruleInteractionAction.current; }
	EOF;

// Rule InteractionAction
ruleInteractionAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='notify'
		{
			newLeafNode(otherlv_0, grammarAccess.getInteractionActionAccess().getNotifyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInteractionActionAccess().getActionNameActionNameParserRuleCall_1_0());
				}
				lv_actionName_1_0=ruleActionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteractionActionRule());
					}
					set(
						$current,
						"actionName",
						lv_actionName_1_0,
						"org.xtext.example.mydsl.MyDsl.ActionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getInteractionActionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInteractionActionAccess().getParametersParametersParserRuleCall_3_0());
				}
				lv_parameters_3_0=ruleParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInteractionActionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_3_0,
						"org.xtext.example.mydsl.MyDsl.Parameters");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getInteractionActionAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='from'
		{
			newLeafNode(otherlv_5, grammarAccess.getInteractionActionAccess().getFromKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInteractionActionRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getInteractionActionAccess().getInteractionEntityEntityNameCrossReference_6_0());
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getInteractionActionAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleArchSpec
entryRuleArchSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArchSpecRule()); }
	iv_ruleArchSpec=ruleArchSpec
	{ $current=$iv_ruleArchSpec.current; }
	EOF;

// Rule ArchSpec
ruleArchSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='structs:'
			{
				newLeafNode(otherlv_0, grammarAccess.getArchSpecAccess().getStructsKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArchSpecAccess().getStructsStructParserRuleCall_0_1_0());
					}
					lv_structs_1_0=ruleStruct
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArchSpecRule());
						}
						add(
							$current,
							"structs",
							lv_structs_1_0,
							"org.xtext.example.mydsl.MyDsl.Struct");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
		otherlv_2='computationalService:'
		{
			newLeafNode(otherlv_2, grammarAccess.getArchSpecAccess().getComputationalServiceKeyword_1());
		}
		(
			otherlv_3='Common:'
			{
				newLeafNode(otherlv_3, grammarAccess.getArchSpecAccess().getCommonKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArchSpecAccess().getInbuiltComputationalServiceInBuiltComputationalServiceParserRuleCall_2_1_0());
					}
					lv_inbuiltComputationalService_4_0=ruleInBuiltComputationalService
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArchSpecRule());
						}
						add(
							$current,
							"inbuiltComputationalService",
							lv_inbuiltComputationalService_4_0,
							"org.xtext.example.mydsl.MyDsl.InBuiltComputationalService");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)*
		(
			otherlv_5='Custom:'
			{
				newLeafNode(otherlv_5, grammarAccess.getArchSpecAccess().getCustomKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getArchSpecAccess().getCustomComputationalServiceCustomComputationalServiceParserRuleCall_3_1_0());
					}
					lv_customComputationalService_6_0=rulecustomComputationalService
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArchSpecRule());
						}
						add(
							$current,
							"customComputationalService",
							lv_customComputationalService_6_0,
							"org.xtext.example.mydsl.MyDsl.customComputationalService");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)*
	)
;

// Entry rule entryRuleInBuiltComputationalService
entryRuleInBuiltComputationalService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInBuiltComputationalServiceRule()); }
	iv_ruleInBuiltComputationalService=ruleInBuiltComputationalService
	{ $current=$iv_ruleInBuiltComputationalService.current; }
	EOF;

// Rule InBuiltComputationalService
ruleInBuiltComputationalService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInBuiltComputationalServiceAccess().getInBuiltComputationalServiceNameEntityNameParserRuleCall_0_0());
				}
				lv_inBuiltComputationalServiceName_0_0=ruleEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInBuiltComputationalServiceRule());
					}
					set(
						$current,
						"inBuiltComputationalServiceName",
						lv_inBuiltComputationalServiceName_0_0,
						"org.xtext.example.mydsl.MyDsl.EntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInBuiltComputationalServiceAccess().getConsumesConsumeForInBuiltParserRuleCall_1_0());
				}
				lv_consumes_1_0=ruleConsumeForInBuilt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInBuiltComputationalServiceRule());
					}
					add(
						$current,
						"consumes",
						lv_consumes_1_0,
						"org.xtext.example.mydsl.MyDsl.ConsumeForInBuilt");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getInBuiltComputationalServiceAccess().getComputeInfoComputeInfoForInBuiltParserRuleCall_2_0());
				}
				lv_computeInfo_2_0=ruleComputeInfoForInBuilt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInBuiltComputationalServiceRule());
					}
					add(
						$current,
						"computeInfo",
						lv_computeInfo_2_0,
						"org.xtext.example.mydsl.MyDsl.ComputeInfoForInBuilt");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getInBuiltComputationalServiceAccess().getGenerateInfoGenerateParserRuleCall_3_0());
				}
				lv_generateInfo_3_0=ruleGenerate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInBuiltComputationalServiceRule());
					}
					add(
						$current,
						"generateInfo",
						lv_generateInfo_3_0,
						"org.xtext.example.mydsl.MyDsl.Generate");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRulecustomComputationalService
entryRulecustomComputationalService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCustomComputationalServiceRule()); }
	iv_rulecustomComputationalService=rulecustomComputationalService
	{ $current=$iv_rulecustomComputationalService.current; }
	EOF;

// Rule customComputationalService
rulecustomComputationalService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getCustomComputationalServiceNameEntityNameParserRuleCall_0_0());
				}
				lv_customComputationalServiceName_0_0=ruleEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
					}
					set(
						$current,
						"customComputationalServiceName",
						lv_customComputationalServiceName_0_0,
						"org.xtext.example.mydsl.MyDsl.EntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getConsumesConsumeParserRuleCall_1_0());
				}
				lv_consumes_1_0=ruleConsume
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
					}
					add(
						$current,
						"consumes",
						lv_consumes_1_0,
						"org.xtext.example.mydsl.MyDsl.Consume");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getRequestsRequestParserRuleCall_2_0());
				}
				lv_requests_2_0=ruleRequest
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
					}
					add(
						$current,
						"requests",
						lv_requests_2_0,
						"org.xtext.example.mydsl.MyDsl.Request");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getGenerateInfoGenerateParserRuleCall_3_0());
				}
				lv_generateInfo_3_0=ruleGenerate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
					}
					add(
						$current,
						"generateInfo",
						lv_generateInfo_3_0,
						"org.xtext.example.mydsl.MyDsl.Generate");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCustomComputationalServiceAccess().getCommandsCommandParserRuleCall_4_0());
				}
				lv_commands_4_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCustomComputationalServiceRule());
					}
					add(
						$current,
						"commands",
						lv_commands_4_0,
						"org.xtext.example.mydsl.MyDsl.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleRequest
entryRuleRequest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequestRule()); }
	iv_ruleRequest=ruleRequest
	{ $current=$iv_ruleRequest.current; }
	EOF;

// Rule Request
ruleRequest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='request'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequestAccess().getRequestKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequestRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRequestAccess().getRequestnameSourceNameCrossReference_1_0());
				}
			)
		)
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getRequestAccess().getToKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRequestRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getRequestAccess().getStorageForRequestEntityNameCrossReference_3_0());
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getRequestAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleConsumeForInBuilt
entryRuleConsumeForInBuilt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConsumeForInBuiltRule()); }
	iv_ruleConsumeForInBuilt=ruleConsumeForInBuilt
	{ $current=$iv_ruleConsumeForInBuilt.current; }
	EOF;

// Rule ConsumeForInBuilt
ruleConsumeForInBuilt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='consume'
		{
			newLeafNode(otherlv_0, grammarAccess.getConsumeForInBuiltAccess().getConsumeKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConsumeForInBuiltRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getConsumeForInBuiltAccess().getNameSourceNameCrossReference_1_0());
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getConsumeForInBuiltAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConsumeForInBuiltRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getConsumeForInBuiltAccess().getSensorForConsumeEntityNameCrossReference_3_0());
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getConsumeForInBuiltAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleComputeInfoForInBuilt
entryRuleComputeInfoForInBuilt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComputeInfoForInBuiltRule()); }
	iv_ruleComputeInfoForInBuilt=ruleComputeInfoForInBuilt
	{ $current=$iv_ruleComputeInfoForInBuilt.current; }
	EOF;

// Rule ComputeInfoForInBuilt
ruleComputeInfoForInBuilt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='COMPUTE'
		{
			newLeafNode(otherlv_0, grammarAccess.getComputeInfoForInBuiltAccess().getCOMPUTEKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getComputeInfoForInBuiltAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComputeInfoForInBuiltAccess().getOperationNameOperationNameParserRuleCall_2_0());
				}
				lv_operationName_2_0=ruleOperationName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComputeInfoForInBuiltRule());
					}
					set(
						$current,
						"operationName",
						lv_operationName_2_0,
						"org.xtext.example.mydsl.MyDsl.OperationName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getComputeInfoForInBuiltAccess().getCommaKeyword_3_0());
			}
			(
				(
					lv_operationParameter_4_0=RULE_INT
					{
						newLeafNode(lv_operationParameter_4_0, grammarAccess.getComputeInfoForInBuiltAccess().getOperationParameterINTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComputeInfoForInBuiltRule());
						}
						setWithLastConsumed(
							$current,
							"operationParameter",
							lv_operationParameter_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getComputeInfoForInBuiltAccess().getRightParenthesisKeyword_4());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getComputeInfoForInBuiltAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleConsume
entryRuleConsume returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConsumeRule()); }
	iv_ruleConsume=ruleConsume
	{ $current=$iv_ruleConsume.current; }
	EOF;

// Rule Consume
ruleConsume returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='consume'
		{
			newLeafNode(otherlv_0, grammarAccess.getConsumeAccess().getConsumeKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConsumeRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getConsumeAccess().getNameSourceNameCrossReference_1_0());
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getConsumeAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConsumeRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getConsumeAccess().getFromNameEntityNameCrossReference_3_0());
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getConsumeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='command'
		{
			newLeafNode(otherlv_0, grammarAccess.getCommandAccess().getCommandKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getCommandAccess().getCommandNameActionNameCrossReference_1_0());
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getCommandAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandAccess().getCommandparameterCommandParameterParserRuleCall_3_0());
				}
				lv_commandparameter_3_0=ruleCommandParameter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandRule());
					}
					set(
						$current,
						"commandparameter",
						lv_commandparameter_3_0,
						"org.xtext.example.mydsl.MyDsl.CommandParameter");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getCommandAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='to'
		{
			newLeafNode(otherlv_5, grammarAccess.getCommandAccess().getToKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandRule());
					}
				}
				otherlv_6=RULE_ID
				{
					newLeafNode(otherlv_6, grammarAccess.getCommandAccess().getActuatorForCommandEntityNameCrossReference_6_0());
				}
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getCommandAccess().getSemicolonKeyword_7());
		}
	)
;

// Entry rule entryRuleCommandParameter
entryRuleCommandParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandParameterRule()); }
	iv_ruleCommandParameter=ruleCommandParameter
	{ $current=$iv_ruleCommandParameter.current; }
	EOF;

// Rule CommandParameter
ruleCommandParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommandParameterRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getCommandParameterAccess().getNameParameterNameCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getCommandParameterAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommandParameterAccess().getParameterCommandParameterParserRuleCall_1_1_0());
					}
					lv_parameter_2_0=ruleCommandParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommandParameterRule());
						}
						set(
							$current,
							"parameter",
							lv_parameter_2_0,
							"org.xtext.example.mydsl.MyDsl.CommandParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleVocSpec
entryRuleVocSpec returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVocSpecRule()); }
	iv_ruleVocSpec=ruleVocSpec
	{ $current=$iv_ruleVocSpec.current; }
	EOF;

// Rule VocSpec
ruleVocSpec returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='structs:'
		{
			newLeafNode(otherlv_0, grammarAccess.getVocSpecAccess().getStructsKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVocSpecAccess().getStructsStructParserRuleCall_1_0());
				}
				lv_structs_1_0=ruleStruct
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVocSpecRule());
					}
					add(
						$current,
						"structs",
						lv_structs_1_0,
						"org.xtext.example.mydsl.MyDsl.Struct");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='resources:'
		{
			newLeafNode(otherlv_2, grammarAccess.getVocSpecAccess().getResourcesKeyword_2());
		}
		otherlv_3='sensors:'
		{
			newLeafNode(otherlv_3, grammarAccess.getVocSpecAccess().getSensorsKeyword_3());
		}
		(
			otherlv_4='periodicSensors:'
			{
				newLeafNode(otherlv_4, grammarAccess.getVocSpecAccess().getPeriodicSensorsKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVocSpecAccess().getPeriodicSensorsPeriodicSensorsParserRuleCall_4_1_0());
					}
					lv_periodicSensors_5_0=rulePeriodicSensors
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVocSpecRule());
						}
						add(
							$current,
							"periodicSensors",
							lv_periodicSensors_5_0,
							"org.xtext.example.mydsl.MyDsl.PeriodicSensors");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
		(
			otherlv_6='eventDrivenSensors:'
			{
				newLeafNode(otherlv_6, grammarAccess.getVocSpecAccess().getEventDrivenSensorsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVocSpecAccess().getEventSensorsEventSensorsParserRuleCall_5_1_0());
					}
					lv_eventSensors_7_0=ruleEventSensors
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVocSpecRule());
						}
						add(
							$current,
							"eventSensors",
							lv_eventSensors_7_0,
							"org.xtext.example.mydsl.MyDsl.EventSensors");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
		(
			otherlv_8='requestBasedSensors:'
			{
				newLeafNode(otherlv_8, grammarAccess.getVocSpecAccess().getRequestBasedSensorsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVocSpecAccess().getRequestSensorsRequestSensorsParserRuleCall_6_1_0());
					}
					lv_requestSensors_9_0=ruleRequestSensors
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVocSpecRule());
						}
						add(
							$current,
							"requestSensors",
							lv_requestSensors_9_0,
							"org.xtext.example.mydsl.MyDsl.RequestSensors");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
		(
			otherlv_10='tags:'
			{
				newLeafNode(otherlv_10, grammarAccess.getVocSpecAccess().getTagsKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVocSpecAccess().getTagsTagsParserRuleCall_7_1_0());
					}
					lv_tags_11_0=ruleTags
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVocSpecRule());
						}
						add(
							$current,
							"tags",
							lv_tags_11_0,
							"org.xtext.example.mydsl.MyDsl.Tags");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
		(
			otherlv_12='actuators:'
			{
				newLeafNode(otherlv_12, grammarAccess.getVocSpecAccess().getActuatorsKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVocSpecAccess().getActuatorsActuatorParserRuleCall_8_1_0());
					}
					lv_actuators_13_0=ruleActuator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVocSpecRule());
						}
						add(
							$current,
							"actuators",
							lv_actuators_13_0,
							"org.xtext.example.mydsl.MyDsl.Actuator");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
		(
			otherlv_14='storages:'
			{
				newLeafNode(otherlv_14, grammarAccess.getVocSpecAccess().getStoragesKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVocSpecAccess().getStorageServiceStorageServiceParserRuleCall_9_1_0());
					}
					lv_storageService_15_0=ruleStorageService
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVocSpecRule());
						}
						add(
							$current,
							"storageService",
							lv_storageService_15_0,
							"org.xtext.example.mydsl.MyDsl.StorageService");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)*
	)
;

// Entry rule entryRuleStruct
entryRuleStruct returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructRule()); }
	iv_ruleStruct=ruleStruct
	{ $current=$iv_ruleStruct.current; }
	EOF;

// Rule Struct
ruleStruct returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStructAccess().getNameStructEntityNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleStructEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStructRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl.MyDsl.StructEntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStructAccess().getFieldsFieldParserRuleCall_1_0());
				}
				lv_fields_1_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStructRule());
					}
					add(
						$current,
						"fields",
						lv_fields_1_0,
						"org.xtext.example.mydsl.MyDsl.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldRule());
					}
					add(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getFieldAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRulePeriodicSensors
entryRulePeriodicSensors returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPeriodicSensorsRule()); }
	iv_rulePeriodicSensors=rulePeriodicSensors
	{ $current=$iv_rulePeriodicSensors.current; }
	EOF;

// Rule PeriodicSensors
rulePeriodicSensors returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodicSensorsAccess().getSensorNameEntityNameParserRuleCall_0_0());
				}
				lv_sensorName_0_0=ruleEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodicSensorsRule());
					}
					set(
						$current,
						"sensorName",
						lv_sensorName_0_0,
						"org.xtext.example.mydsl.MyDsl.EntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodicSensorsAccess().getGenerateInfoGenerateParserRuleCall_1_0());
				}
				lv_generateInfo_1_0=ruleGenerate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodicSensorsRule());
					}
					add(
						$current,
						"generateInfo",
						lv_generateInfo_1_0,
						"org.xtext.example.mydsl.MyDsl.Generate");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getPeriodicSensorsAccess().getSampelingDefSampelingDefParserRuleCall_2_0());
				}
				lv_sampelingDef_2_0=ruleSampelingDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPeriodicSensorsRule());
					}
					set(
						$current,
						"sampelingDef",
						lv_sampelingDef_2_0,
						"org.xtext.example.mydsl.MyDsl.SampelingDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSampelingDef
entryRuleSampelingDef returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSampelingDefRule()); }
	iv_ruleSampelingDef=ruleSampelingDef
	{ $current=$iv_ruleSampelingDef.current.getText(); }
	EOF;

// Rule SampelingDef
ruleSampelingDef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='sample'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSampelingDefAccess().getSampleKeyword_0());
		}
		kw='period'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSampelingDefAccess().getPeriodKeyword_1());
		}
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getSampelingDefAccess().getINTTerminalRuleCall_2());
		}
		kw='for'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSampelingDefAccess().getForKeyword_3());
		}
		this_INT_4=RULE_INT
		{
			$current.merge(this_INT_4);
		}
		{
			newLeafNode(this_INT_4, grammarAccess.getSampelingDefAccess().getINTTerminalRuleCall_4());
		}
		kw=';'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSampelingDefAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleEventSensors
entryRuleEventSensors returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventSensorsRule()); }
	iv_ruleEventSensors=ruleEventSensors
	{ $current=$iv_ruleEventSensors.current; }
	EOF;

// Rule EventSensors
ruleEventSensors returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEventSensorsAccess().getSensorNameEntityNameParserRuleCall_0_0());
				}
				lv_sensorName_0_0=ruleEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventSensorsRule());
					}
					set(
						$current,
						"sensorName",
						lv_sensorName_0_0,
						"org.xtext.example.mydsl.MyDsl.EntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventSensorsAccess().getGenerateInfoGenerateParserRuleCall_1_0());
				}
				lv_generateInfo_1_0=ruleGenerate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventSensorsRule());
					}
					add(
						$current,
						"generateInfo",
						lv_generateInfo_1_0,
						"org.xtext.example.mydsl.MyDsl.Generate");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getEventSensorsAccess().getOnConditionDefOnConditionDefParserRuleCall_2_0());
				}
				lv_onConditionDef_2_0=ruleOnConditionDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventSensorsRule());
					}
					set(
						$current,
						"onConditionDef",
						lv_onConditionDef_2_0,
						"org.xtext.example.mydsl.MyDsl.OnConditionDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOnConditionDef
entryRuleOnConditionDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOnConditionDefRule()); }
	iv_ruleOnConditionDef=ruleOnConditionDef
	{ $current=$iv_ruleOnConditionDef.current; }
	EOF;

// Rule OnConditionDef
ruleOnConditionDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='onCondition'
		{
			newLeafNode(otherlv_0, grammarAccess.getOnConditionDefAccess().getOnConditionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOnConditionDefAccess().getEventConditionsEventConditionsParserRuleCall_1_0());
				}
				lv_eventConditions_1_0=ruleEventConditions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOnConditionDefRule());
					}
					add(
						$current,
						"eventConditions",
						lv_eventConditions_1_0,
						"org.xtext.example.mydsl.MyDsl.EventConditions");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getOnConditionDefAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleRequestSensors
entryRuleRequestSensors returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequestSensorsRule()); }
	iv_ruleRequestSensors=ruleRequestSensors
	{ $current=$iv_ruleRequestSensors.current; }
	EOF;

// Rule RequestSensors
ruleRequestSensors returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRequestSensorsAccess().getSensorNameEntityNameParserRuleCall_0_0());
				}
				lv_sensorName_0_0=ruleEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequestSensorsRule());
					}
					set(
						$current,
						"sensorName",
						lv_sensorName_0_0,
						"org.xtext.example.mydsl.MyDsl.EntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRequestSensorsAccess().getDataAccessDataAccessForRequestSensorsParserRuleCall_1_0());
				}
				lv_dataAccess_1_0=ruleDataAccessForRequestSensors
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRequestSensorsRule());
					}
					add(
						$current,
						"dataAccess",
						lv_dataAccess_1_0,
						"org.xtext.example.mydsl.MyDsl.DataAccessForRequestSensors");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleTags
entryRuleTags returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagsRule()); }
	iv_ruleTags=ruleTags
	{ $current=$iv_ruleTags.current; }
	EOF;

// Rule Tags
ruleTags returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTagsAccess().getSensorNameEntityNameParserRuleCall_0_0());
				}
				lv_sensorName_0_0=ruleEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTagsRule());
					}
					set(
						$current,
						"sensorName",
						lv_sensorName_0_0,
						"org.xtext.example.mydsl.MyDsl.EntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTagsAccess().getGenerateInfoGenerateParserRuleCall_1_0());
				}
				lv_generateInfo_1_0=ruleGenerate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTagsRule());
					}
					add(
						$current,
						"generateInfo",
						lv_generateInfo_1_0,
						"org.xtext.example.mydsl.MyDsl.Generate");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleEventConditions
entryRuleEventConditions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventConditionsRule()); }
	iv_ruleEventConditions=ruleEventConditions
	{ $current=$iv_ruleEventConditions.current; }
	EOF;

// Rule EventConditions
ruleEventConditions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEventConditionsAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventConditionsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1='>'
			{
				newLeafNode(otherlv_1, grammarAccess.getEventConditionsAccess().getGreaterThanSignKeyword_1_0());
			}
			    |
			otherlv_2='<'
			{
				newLeafNode(otherlv_2, grammarAccess.getEventConditionsAccess().getLessThanSignKeyword_1_1());
			}
			    |
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getEventConditionsAccess().getEqualsSignKeyword_1_2());
			}
		)*
		(
			(
				lv_intValue_4_0=RULE_INT
				{
					newLeafNode(lv_intValue_4_0, grammarAccess.getEventConditionsAccess().getIntValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventConditionsRule());
					}
					setWithLastConsumed(
						$current,
						"intValue",
						lv_intValue_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventConditionsAccess().getNameUnitUnitParserRuleCall_3_0());
				}
				lv_nameUnit_5_0=ruleUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventConditionsRule());
					}
					set(
						$current,
						"nameUnit",
						lv_nameUnit_5_0,
						"org.xtext.example.mydsl.MyDsl.Unit");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getEventConditionsAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventConditionsAccess().getEventConditionsEventConditionsParserRuleCall_4_1_0());
					}
					lv_eventConditions_7_0=ruleEventConditions
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventConditionsRule());
						}
						add(
							$current,
							"eventConditions",
							lv_eventConditions_7_0,
							"org.xtext.example.mydsl.MyDsl.EventConditions");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDeviceEntityName
entryRuleDeviceEntityName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeviceEntityNameRule()); }
	iv_ruleDeviceEntityName=ruleDeviceEntityName
	{ $current=$iv_ruleDeviceEntityName.current; }
	EOF;

// Rule DeviceEntityName
ruleDeviceEntityName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getDeviceEntityNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDeviceEntityNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleStructEntityName
entryRuleStructEntityName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStructEntityNameRule()); }
	iv_ruleStructEntityName=ruleStructEntityName
	{ $current=$iv_ruleStructEntityName.current; }
	EOF;

// Rule StructEntityName
ruleStructEntityName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getStructEntityNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStructEntityNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleEntityName
entryRuleEntityName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityNameRule()); }
	iv_ruleEntityName=ruleEntityName
	{ $current=$iv_ruleEntityName.current; }
	EOF;

// Rule EntityName
ruleEntityName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getEntityNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEntityNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleGenerate
entryRuleGenerate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenerateRule()); }
	iv_ruleGenerate=ruleGenerate
	{ $current=$iv_ruleGenerate.current; }
	EOF;

// Rule Generate
ruleGenerate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='generate'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenerateAccess().getGenerateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGenerateAccess().getSourceNameSourceNameParserRuleCall_1_0());
				}
				lv_sourceName_1_0=ruleSourceName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenerateRule());
					}
					set(
						$current,
						"sourceName",
						lv_sourceName_1_0,
						"org.xtext.example.mydsl.MyDsl.SourceName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getGenerateAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGenerateAccess().getTypeTypeParserRuleCall_3_0());
				}
				lv_type_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGenerateRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getGenerateAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleSourceName
entryRuleSourceName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceNameRule()); }
	iv_ruleSourceName=ruleSourceName
	{ $current=$iv_ruleSourceName.current; }
	EOF;

// Rule SourceName
ruleSourceName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSourceNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSourceNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleActuator
entryRuleActuator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActuatorRule()); }
	iv_ruleActuator=ruleActuator
	{ $current=$iv_ruleActuator.current; }
	EOF;

// Rule Actuator
ruleActuator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getActuatorNameEntityNameParserRuleCall_0_0());
				}
				lv_actuatorName_0_0=ruleEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					set(
						$current,
						"actuatorName",
						lv_actuatorName_0_0,
						"org.xtext.example.mydsl.MyDsl.EntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getActuatorAccess().getActionsActionParserRuleCall_1_0());
				}
				lv_actions_1_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActuatorRule());
					}
					add(
						$current,
						"actions",
						lv_actions_1_0,
						"org.xtext.example.mydsl.MyDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='action'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionAccess().getActionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getActionNameActionNameParserRuleCall_1_0());
				}
				lv_actionName_1_0=ruleActionName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					set(
						$current,
						"actionName",
						lv_actionName_1_0,
						"org.xtext.example.mydsl.MyDsl.ActionName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getActionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getActionAccess().getParametersParametersParserRuleCall_3_0());
				}
				lv_parameters_3_0=ruleParameters
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getActionRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_3_0,
						"org.xtext.example.mydsl.MyDsl.Parameters");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getActionAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getActionAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleActionName
entryRuleActionName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionNameRule()); }
	iv_ruleActionName=ruleActionName
	{ $current=$iv_ruleActionName.current; }
	EOF;

// Rule ActionName
ruleActionName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getActionNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getActionNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleParameters
entryRuleParameters returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParametersRule()); }
	iv_ruleParameters=ruleParameters
	{ $current=$iv_ruleParameters.current; }
	EOF;

// Rule Parameters
ruleParameters returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParametersAccess().getParameterNameParameterNameParserRuleCall_0_0());
				}
				lv_parameterName_0_0=ruleParameterName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParametersRule());
					}
					set(
						$current,
						"parameterName",
						lv_parameterName_0_0,
						"org.xtext.example.mydsl.MyDsl.ParameterName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParametersAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParametersAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParametersRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParameterName
entryRuleParameterName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterNameRule()); }
	iv_ruleParameterName=ruleParameterName
	{ $current=$iv_ruleParameterName.current; }
	EOF;

// Rule ParameterName
ruleParameterName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getParameterNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getParameterNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleStorageService
entryRuleStorageService returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStorageServiceRule()); }
	iv_ruleStorageService=ruleStorageService
	{ $current=$iv_ruleStorageService.current; }
	EOF;

// Rule StorageService
ruleStorageService returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageServiceAccess().getStorageServiceNameEntityNameParserRuleCall_0_0());
				}
				lv_storageServiceName_0_0=ruleEntityName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageServiceRule());
					}
					set(
						$current,
						"storageServiceName",
						lv_storageServiceName_0_0,
						"org.xtext.example.mydsl.MyDsl.EntityName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getStorageServiceAccess().getDataAccessesDataAccessParserRuleCall_1_0());
				}
				lv_dataAccesses_1_0=ruleDataAccess
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStorageServiceRule());
					}
					add(
						$current,
						"dataAccesses",
						lv_dataAccesses_1_0,
						"org.xtext.example.mydsl.MyDsl.DataAccess");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleDataAccessForRequestSensors
entryRuleDataAccessForRequestSensors returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataAccessForRequestSensorsRule()); }
	iv_ruleDataAccessForRequestSensors=ruleDataAccessForRequestSensors
	{ $current=$iv_ruleDataAccessForRequestSensors.current; }
	EOF;

// Rule DataAccessForRequestSensors
ruleDataAccessForRequestSensors returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='generate'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataAccessForRequestSensorsAccess().getGenerateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataAccessForRequestSensorsAccess().getSourceNameSourceNameParserRuleCall_1_0());
				}
				lv_sourceName_1_0=ruleSourceName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataAccessForRequestSensorsRule());
					}
					set(
						$current,
						"sourceName",
						lv_sourceName_1_0,
						"org.xtext.example.mydsl.MyDsl.SourceName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataAccessForRequestSensorsAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataAccessForRequestSensorsAccess().getDataAccessTypeTypeParserRuleCall_3_0());
				}
				lv_dataAccessType_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataAccessForRequestSensorsRule());
					}
					set(
						$current,
						"dataAccessType",
						lv_dataAccessType_3_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='accessed-by'
		{
			newLeafNode(otherlv_4, grammarAccess.getDataAccessForRequestSensorsAccess().getAccessedByKeyword_4());
		}
		(
			(
				lv_dataItem_5_0=RULE_ID
				{
					newLeafNode(lv_dataItem_5_0, grammarAccess.getDataAccessForRequestSensorsAccess().getDataItemIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataAccessForRequestSensorsRule());
					}
					setWithLastConsumed(
						$current,
						"dataItem",
						lv_dataItem_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getDataAccessForRequestSensorsAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataAccessForRequestSensorsAccess().getTypeTypeParserRuleCall_7_0());
				}
				lv_type_7_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataAccessForRequestSensorsRule());
					}
					set(
						$current,
						"type",
						lv_type_7_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getDataAccessForRequestSensorsAccess().getSemicolonKeyword_8());
		}
	)
;

// Entry rule entryRuleDataAccess
entryRuleDataAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataAccessRule()); }
	iv_ruleDataAccess=ruleDataAccess
	{ $current=$iv_ruleDataAccess.current; }
	EOF;

// Rule DataAccess
ruleDataAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='generate'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataAccessAccess().getGenerateKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataAccessAccess().getSourceNameSourceNameParserRuleCall_1_0());
				}
				lv_sourceName_1_0=ruleSourceName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataAccessRule());
					}
					set(
						$current,
						"sourceName",
						lv_sourceName_1_0,
						"org.xtext.example.mydsl.MyDsl.SourceName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDataAccessAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataAccessAccess().getDataAccessTypeTypeParserRuleCall_3_0());
				}
				lv_dataAccessType_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataAccessRule());
					}
					set(
						$current,
						"dataAccessType",
						lv_dataAccessType_3_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='accessed-by'
		{
			newLeafNode(otherlv_4, grammarAccess.getDataAccessAccess().getAccessedByKeyword_4());
		}
		(
			(
				lv_dataItem_5_0=RULE_ID
				{
					newLeafNode(lv_dataItem_5_0, grammarAccess.getDataAccessAccess().getDataItemIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDataAccessRule());
					}
					setWithLastConsumed(
						$current,
						"dataItem",
						lv_dataItem_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getDataAccessAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataAccessAccess().getTypeTypeParserRuleCall_7_0());
				}
				lv_type_7_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataAccessRule());
					}
					set(
						$current,
						"type",
						lv_type_7_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getDataAccessAccess().getSemicolonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDataAccessAccess().getActionsActionParserRuleCall_9_0());
				}
				lv_actions_9_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDataAccessRule());
					}
					add(
						$current,
						"actions",
						lv_actions_9_0,
						"org.xtext.example.mydsl.MyDsl.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getTypeAccess().getPrimitiveDataTypePrimitiveDataTypeParserRuleCall_0());
			}
			lv_primitiveDataType_0_0=rulePrimitiveDataType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getTypeRule());
				}
				set(
					$current,
					"primitiveDataType",
					lv_primitiveDataType_0_0,
					"org.xtext.example.mydsl.MyDsl.PrimitiveDataType");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	iv_ruleUnit=ruleUnit
	{ $current=$iv_ruleUnit.current; }
	EOF;

// Rule Unit
ruleUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='PPM'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getUnitAccess().getNamePPMKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "PPM");
				}
			)
		)
		    |
		(
			(
				lv_name_1_0='miliseconds'
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUnitAccess().getNameMilisecondsKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitRule());
					}
					setWithLastConsumed($current, "name", lv_name_1_0, "miliseconds");
				}
			)
		)
		    |
		(
			(
				lv_name_2_0='seconds'
				{
					newLeafNode(lv_name_2_0, grammarAccess.getUnitAccess().getNameSecondsKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitRule());
					}
					setWithLastConsumed($current, "name", lv_name_2_0, "seconds");
				}
			)
		)
		    |
		(
			(
				lv_name_3_0='minutes'
				{
					newLeafNode(lv_name_3_0, grammarAccess.getUnitAccess().getNameMinutesKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitRule());
					}
					setWithLastConsumed($current, "name", lv_name_3_0, "minutes");
				}
			)
		)
		    |
		(
			(
				lv_name_4_0='ppm'
				{
					newLeafNode(lv_name_4_0, grammarAccess.getUnitAccess().getNamePpmKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUnitRule());
					}
					setWithLastConsumed($current, "name", lv_name_4_0, "ppm");
				}
			)
		)
	)
;

// Entry rule entryRuleOperationName
entryRuleOperationName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationNameRule()); }
	iv_ruleOperationName=ruleOperationName
	{ $current=$iv_ruleOperationName.current; }
	EOF;

// Rule OperationName
ruleOperationName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0='AVG_BY_SAMPLE'
			{
				newLeafNode(lv_name_0_0, grammarAccess.getOperationNameAccess().getNameAVG_BY_SAMPLEKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getOperationNameRule());
				}
				setWithLastConsumed($current, "name", lv_name_0_0, "AVG_BY_SAMPLE");
			}
		)
	)
;

// Entry rule entryRulePrimitiveDataType
entryRulePrimitiveDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveDataTypeRule()); }
	iv_rulePrimitiveDataType=rulePrimitiveDataType
	{ $current=$iv_rulePrimitiveDataType.current; }
	EOF;

// Rule PrimitiveDataType
rulePrimitiveDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_INTEGER_0_0='Integer'
				{
					newLeafNode(lv_INTEGER_0_0, grammarAccess.getPrimitiveDataTypeAccess().getINTEGERIntegerKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
					}
					setWithLastConsumed($current, "INTEGER", lv_INTEGER_0_0, "Integer");
				}
			)
		)
		    |
		(
			(
				lv_BOOLEAN_1_0='boolean'
				{
					newLeafNode(lv_BOOLEAN_1_0, grammarAccess.getPrimitiveDataTypeAccess().getBOOLEANBooleanKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
					}
					setWithLastConsumed($current, "BOOLEAN", lv_BOOLEAN_1_0, "boolean");
				}
			)
		)
		    |
		(
			(
				lv_STRING_2_0='String'
				{
					newLeafNode(lv_STRING_2_0, grammarAccess.getPrimitiveDataTypeAccess().getSTRINGStringKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
					}
					setWithLastConsumed($current, "STRING", lv_STRING_2_0, "String");
				}
			)
		)
		    |
		(
			(
				lv_LONG_3_0='long'
				{
					newLeafNode(lv_LONG_3_0, grammarAccess.getPrimitiveDataTypeAccess().getLONGLongKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
					}
					setWithLastConsumed($current, "LONG", lv_LONG_3_0, "long");
				}
			)
		)
		    |
		(
			(
				lv_DOUBLE_4_0='double'
				{
					newLeafNode(lv_DOUBLE_4_0, grammarAccess.getPrimitiveDataTypeAccess().getDOUBLEDoubleKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
					}
					setWithLastConsumed($current, "DOUBLE", lv_DOUBLE_4_0, "double");
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPrimitiveDataTypeRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getPrimitiveDataTypeAccess().getStructDefStructEntityNameCrossReference_5_0());
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
